/*
 * Copyright (C) 2014 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.ashomok"
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 35
        versionName "4.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError true
    }

    flavorDimensions "version"
    productFlavors {
        common {
            dimension "version"
            applicationIdSuffix ".lullabies"
            buildConfigField "String", "PRIVACY_POLICY_LINK", "\"https://sites.google.com/view/lullaby-privacy-policy/home\""

            /* BASE_64_ENCODED_PUBLIC_KEY should be YOUR APPLICATION'S PUBLIC KEY
             * (that you got from the Google Play developer console). This is not your
             * developer public key, it's the *app-specific* public key.
             *
             * Instead of just storing the entire literal string here embedded in the
             * program,  construct the key at runtime from pieces or
             * use bit manipulation (for example, XOR with some other string) to hide
             * the actual key.  The key itself is not secret information, but we don't
             * want to make it easy for an attacker to replace the public key with one
             * of their own and then fake messages from the server.
             */
            buildConfigField "String", "BASE_64_ENCODED_PUBLIC_KEY", "\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlrmor" +
                    "76CFdZYovQsXFmMI6FFAQeVgp0m3sEqi0wlqR4W9imkc/JmHF1qgyxgHVMPj2EqNQR5BTZ7/pMJaEi99px6/+2xBQ0axWKAq9dQy" +
                    "FWEDnRiDuzIhDVq0vWJvs99/MgJ4qipYAo/mgsbe1JdQTfwfX34rZoU7VyI+OnL1klZfhpDhBC5wMQI54cUjsRF0tjnIxzy8Hr+u" +
                    "SbSU+JiumarDZ0iU/kZtSbr3uvP7ub+daZ1HIT6erJPUx2vJ3AFf1RDvkcgB/rQNTL7XXSiiL+ES3oX/YKs5+iVp/ULwrTwNN6Vo" +
                    "bPwt6lnxuzM11aKKZy1avFJsAbP6KbiGrIQFwIDAQAB\""

            buildConfigField "String", "CATALOG_URL", "\"https://lullabies-android-app.s3.us-east-2.amazonaws.com/v34/json/music.json\""
            buildConfigField "String", "CATALOG_RU_URL", "\"https://lullabies-android-app.s3.us-east-2.amazonaws.com/v34/json/music_ru.json\""
            buildConfigField "boolean", "IS_NATIVE_AD_ACTIVE", "true"
        }
    }

    kapt {
        generateStubs = true
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {

    implementation 'com.google.android.gms:play-services-cast-framework:19.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'
    implementation 'androidx.leanback:leanback:1.0.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.percentlayout:percentlayout:1.0.0'
    implementation 'com.google.firebase:firebase-ads:19.3.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.android.billingclient:billing:3.0.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    // Dagger docs https://dagger.dev/
    implementation 'com.google.dagger:dagger:2.22'
    implementation 'com.google.dagger:dagger-android:2.16'
    implementation 'com.google.dagger:dagger-android-support:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    kapt 'com.google.dagger:dagger-android-processor:2.16'

    implementation 'com.annimon:stream:1.1.8'
    implementation 'com.google.android.exoplayer:exoplayer:2.7.3'
    implementation 'com.google.firebase:firebase-core:17.5.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    //rx todo replace rx to coroutines
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.1.16'
    implementation group: 'io.reactivex.rxjava2', name: 'rxandroid', version: '2.0.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    // required if you want to use Mockito for Android tests
    androidTestImplementation 'org.mockito:mockito-core:2.28.2'
    androidTestImplementation 'org.mockito:mockito-android:2.28.2'
    // Espresso UI Testing
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.2.0'
    androidTestImplementation 'androidx.test.espresso.idling:idling-concurrent:3.2.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.annotation:annotation:1.1.0'

    //kotlin
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'androidx.lifecycle:lifecycle-common-java8:2.3.0-alpha07'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.72'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2"
    implementation 'androidx.room:room-runtime:2.2.5'
    kapt 'androidx.room:room-compiler:2.2.5'
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
